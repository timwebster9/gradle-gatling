import com.timw.Gatling

node('mac') {

    stage('cleanup') {
        deleteDir()
    }

    stage('Checkout') {
        checkout scm
    }

    stage('Gatling Test') {

        new Gatling(this).execute()

//        withDocker('hmcts/moj-gatling-image:2.3.1-1.0', '--network="host" -v $WORKSPACE/src/gatling/conf:/etc/gatling/conf') {
//
//            env.BASE_URL='http://host.docker.internal:8080'
//
//            sh 'gatling.sh -m -sf $WORKSPACE/src/gatling/simulations -df $WORKSPACE/src/gatling/data -bdf $WORKSPACE/src/gatling/bodies \
//                           -bf $WORKSPACE/build/gatling/binaries -rf $WORKSPACE/build/gatling/reports'
//
//        }

        withCredentials([string(credentialsId: 'cosmosKey', variable: 'COSMOS_KEY')]) {

            env.COSMOSDB_URL       = 'https://performancedb.documents.azure.com/'
            env.COSMOSDB_TOKEN_KEY = "${COSMOS_KEY}"

            publishToCosmosDb(this,
                              [environment: 'dev', product: 'some-webapp', component: 'backend'],
                              "${WORKSPACE}/" + Gatling.GATLING_REPORTS_RELATIVE_PATH,
                              '**/*.json')
        }

        gatlingArchive()



        //publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: 'build/gatling/reports', reportFiles: 'index.html', reportName: 'Gatling Report', reportTitles: ''])

    }
    /*
    stage('Azure upload') {
        withDocker('hmcts/moj-azcopy-image:7.2.0-netcore-1.0', '-u root') {
            withCredentials([usernamePassword(credentialsId: "storage-key", passwordVariable: 'STORAGE_ACCOUNT_KEY', usernameVariable: 'STORAGE_ACCOUNT_NAME')]) {
                sh "azcopy --source $WORKSPACE/build/gatling/reports \
                --destination https://${STORAGE_ACCOUNT_NAME}.blob.core.windows.net/gatling-store/jenkins-test \
                --dest-key ${STORAGE_ACCOUNT_KEY} \
                --set-content-type --recursive"
            }
        }
    }
    */

}